[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "kibble"
dynamic = ["version"]
dependencies = [
  "matplotlib>=3.10.3",
  "msl-equipment @ git+https://github.com/MSLNZ/msl-equipment.git",
  "scipy>=1.15.3",
]
requires-python = ">= 3.12"
description = "MSL Kibble Balance software."
license = {file = "LICENSE.txt"}
readme = "README.md"
authors = [
  {name = "Measurement Standards Laboratory of New Zealand", email = "info@measurement.govt.nz"},
]
maintainers = [
  {name = "Joseph Borbely", email = "joseph.borbely@measurement.govt.nz"},
  {name = "Yin Hsien Fung", email = "yinhsien.fung@measurement.govt.nz"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development",
]

[project.urls]
Homepage = "https://github.com/MSLNZ/ms-kibble"
Source = "https://github.com/MSLNZ/ms-kibble"
Tracker = "https://github.com/MSLNZ/ms-kibble/issues"

[dependency-groups]
doc = [
    "black>=25.1.0",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.14",
    "mkdocstrings-python>=1.16.11",
]
lint = [
    "ruff>=0.11.11",
]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
]
type = [
    "basedpyright>=1.29.2",
    "mypy>=1.15.0",
]
dev = [
    {include-group = "doc"},
    {include-group = "lint"},
    {include-group = "test"},
    {include-group = "type"},
    "kibble",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/kibble/_version.py"

[tool.pytest.ini_options]
cache_dir = ".cache/pytest"
addopts = [
    "--cov=src",
    "--cov-report=html",
    "--cov-config=pyproject.toml",
    "--verbose",
    "--doctest-modules",
    "--doctest-glob=*.md",
    "--import-mode=importlib",
    "--ignore=examples/",
]
doctest_optionflags = "NORMALIZE_WHITESPACE ALLOW_UNICODE ELLIPSIS"

[tool.coverage.run]
data_file = ".cache/coverage/.coverage"
branch = true
omit = [
    "examples/*",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "pragma: no branch",
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
]

[tool.coverage.html]
directory = ".cache/coverage"
title = "Kibble coverage report"

[tool.mypy]
cache_dir = ".cache/mypy"
strict = true
strict_bytes = true
allow_redefinition = false
allow_untyped_globals = false
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_expr = true
disallow_any_unimported = true
ignore_missing_imports = false
implicit_optional = false
local_partial_types = true
scripts_are_modules = true
warn_no_return = true
warn_unreachable = true

[tool.basedpyright]
failOnWarnings = true
typeCheckingMode = "recommended"
useLibraryCodeForTypes = false
exclude = [
    "**/.*",
    "**/__pycache__",
    "src/kibble/_version.py",
]

[tool.ruff]
line-length = 120
exclude = [
    ".cache",
    ".git",
    ".github",
    ".venv",
    "dist",
    "site",
    "venv",
    "src/kibble/_version.py",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D203", # one-blank-line-before-class
  "D213", # multi-line-summary-second-line
  "COM812", # missing-trailing-comma
  "ISC001", # single-line-implicit-string-concatenation
]

[tool.ruff.lint.isort]
known-first-party = ["kibble"]

[tool.ruff.lint.per-file-ignores]
"examples/*.py" = [
  "INP001",  # implicit-namespace-package
  "T201",  # print statements
]
"scratches/*.py" = [
  "INP001",  # implicit-namespace-package
  "T201",  # print statements
]

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.lint.pydocstyle]
convention = "google"
